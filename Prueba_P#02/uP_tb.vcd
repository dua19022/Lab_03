$date
	Sun Nov 22 02:19:10 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 4 ! result [3:0] $end
$var wire 1 " exit $end
$var wire 1 # carry $end
$var reg 4 $ A [3:0] $end
$var reg 4 % B [3:0] $end
$var reg 3 & command [2:0] $end
$scope module test $end
$var wire 4 ' A [3:0] $end
$var wire 4 ( B [3:0] $end
$var wire 3 ) command [2:0] $end
$var wire 1 # zero $end
$var wire 4 * result [3:0] $end
$var wire 1 + carry $end
$var reg 5 , q [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ,
x+
bx *
bx )
bx (
bx '
bx &
bx %
bx $
x#
x"
b0x !
$end
#1
0#
1"
b1 *
b0 !
0+
b1 ,
b0 &
b0 )
b111 %
b111 (
b1 $
b1 '
#3
b111 *
b111 ,
b10 &
b10 )
#5
1#
0"
b0 *
b1 !
1+
b10000 ,
b11 &
b11 )
b1000 %
b1000 (
b1000 $
b1000 '
#7
b0 !
0+
b0 ,
b1 &
b1 )
b111 %
b111 (
b111 $
b111 '
#9
0#
b1000 *
b1000 ,
b100 &
b100 )
#21
