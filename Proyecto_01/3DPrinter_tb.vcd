$date
	Sat Oct 17 17:19:50 2020
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 3 ! W [2:0] $end
$var wire 3 " M [2:0] $end
$var wire 3 # LCD [2:0] $end
$var wire 2 $ C [1:0] $end
$var reg 1 % AB $end
$var reg 2 & F [1:0] $end
$var reg 1 ' I $end
$var reg 1 ( O $end
$var reg 1 ) P2 $end
$var reg 1 * PB $end
$var reg 1 + clk $end
$var reg 1 , reset $end
$var reg 1 - sh $end
$var reg 1 . signal $end
$var reg 1 / sx $end
$var reg 1 0 sy $end
$var reg 1 1 sy2 $end
$var reg 1 2 sz $end
$scope module main $end
$var wire 1 % AB $end
$var wire 2 3 F [1:0] $end
$var wire 1 ' I $end
$var wire 1 ( O $end
$var wire 1 ) P2 $end
$var wire 1 * PB $end
$var wire 1 + clk $end
$var wire 1 , reset $end
$var wire 1 - sh $end
$var wire 1 . signal $end
$var wire 1 / sx $end
$var wire 1 0 sy $end
$var wire 1 1 sy2 $end
$var wire 1 2 sz $end
$var wire 1 4 ot $end
$var wire 3 5 W [2:0] $end
$var wire 1 6 T1 $end
$var wire 2 7 PH [1:0] $end
$var wire 1 8 P $end
$var wire 3 9 M [2:0] $end
$var wire 3 : LCD [2:0] $end
$var wire 1 ; HT $end
$var wire 1 < HOME $end
$var wire 1 = EN $end
$var wire 2 > CH [1:0] $end
$var wire 2 ? C [1:0] $end
$scope module M001 $end
$var wire 1 + clk $end
$var wire 1 @ inc $end
$var wire 1 4 out $end
$var wire 1 , reset $end
$var wire 1 . signal $end
$var wire 1 A ot $end
$scope module AR $end
$var wire 1 @ D $end
$var wire 1 + clk $end
$var wire 1 , reset $end
$var reg 1 A Q $end
$upscope $end
$upscope $end
$scope module M010 $end
$var wire 1 ' I $end
$var wire 1 ( O $end
$var wire 1 8 P $end
$var wire 1 ) P2 $end
$var wire 1 4 R $end
$var wire 1 + clk $end
$var wire 1 , reset $end
$var wire 2 B S_00 [1:0] $end
$var wire 2 C SF_00 [1:0] $end
$var wire 1 D S1 $end
$var wire 1 E S0 $end
$var wire 2 F C [1:0] $end
$scope module FF00 $end
$var wire 2 G D [1:0] $end
$var wire 1 + clk $end
$var wire 1 , reset $end
$var reg 2 H Q [1:0] $end
$upscope $end
$upscope $end
$scope module M011 $end
$var wire 1 < HOME $end
$var wire 1 4 P $end
$var wire 1 + clk $end
$var wire 1 , reset $end
$var wire 1 - sh $end
$var wire 1 / sx $end
$var wire 1 0 sy $end
$var wire 1 1 sy2 $end
$var wire 1 2 sz $end
$var wire 3 I S_000 [2:0] $end
$var wire 3 J SF_000 [2:0] $end
$var wire 1 K S2 $end
$var wire 1 L S1 $end
$var wire 1 M S0 $end
$var wire 3 N M [2:0] $end
$scope module FF01 $end
$var wire 3 O D [2:0] $end
$var wire 1 , clk $end
$var wire 1 + reset $end
$var reg 3 P Q [2:0] $end
$upscope $end
$upscope $end
$scope module M100 $end
$var wire 1 % AB $end
$var wire 1 = EN $end
$var wire 2 Q F [1:0] $end
$var wire 1 ; HT $end
$var wire 1 * PB $end
$var wire 1 + clk $end
$var wire 1 , reset $end
$var wire 1 < sh $end
$var wire 1 6 T1 $end
$var wire 4 R S_0000 [3:0] $end
$var wire 4 S SF_0000 [3:0] $end
$var wire 1 T S3 $end
$var wire 1 U S2 $end
$var wire 1 V S1 $end
$var wire 1 W S0 $end
$var wire 2 X PH [1:0] $end
$var wire 3 Y LCD [2:0] $end
$var wire 2 Z CH [1:0] $end
$scope module FF10 $end
$var wire 4 [ D [3:0] $end
$var wire 1 , clk $end
$var wire 1 + reset $end
$var reg 4 \ Q [3:0] $end
$upscope $end
$upscope $end
$scope module M101 $end
$var wire 2 ] CH [1:0] $end
$var wire 1 ; HT $end
$var wire 1 ( O $end
$var wire 1 4 P $end
$var wire 1 ) P2 $end
$var wire 2 ^ PH [1:0] $end
$var wire 1 + clk $end
$var wire 1 , reset $end
$var wire 3 _ W [2:0] $end
$var wire 3 ` S_000 [2:0] $end
$var wire 3 a SF_000 [2:0] $end
$var wire 1 b S2 $end
$var wire 1 c S1 $end
$var wire 1 d S0 $end
$scope module FF11 $end
$var wire 3 e D [2:0] $end
$var wire 1 , clk $end
$var wire 1 + reset $end
$var reg 3 f Q [2:0] $end
$upscope $end
$upscope $end
$scope module M111 $end
$var wire 1 = EN $end
$var wire 1 + clk $end
$var wire 1 g clock $end
$var wire 1 h zero $end
$var wire 8 i value [7:0] $end
$var wire 1 6 T1 $end
$scope module T_1 $end
$var wire 1 g clk $end
$var wire 8 j maxvalue [7:0] $end
$var wire 1 k reset $end
$var reg 8 l value [7:0] $end
$var reg 1 h zero $end
$upscope $end
$scope module T_2 $end
$var wire 1 m D $end
$var wire 1 h clk $end
$var wire 1 n reset $end
$var reg 1 6 Q $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0n
1m
bx l
0k
b101 j
bx i
xh
1g
b0 f
b0x0 e
0d
0c
0b
b0x0 a
b0 `
b0 _
b1 ^
b11 ]
b0 \
b0x [
b11 Z
b0 Y
b1 X
0W
0V
0U
0T
b0x S
b0 R
bx Q
b0 P
b0x O
b0 N
0M
0L
0K
b0x J
b0 I
bx H
bx G
bx F
xE
xD
bx C
bx B
xA
x@
bx ?
b11 >
1=
1<
1;
b0 :
b0 9
x8
b1 7
x6
b0 5
x4
bx 3
x2
x1
x0
x/
x.
x-
x,
1+
x*
x)
x(
x'
bx &
x%
bx $
b0 #
b0 "
b0 !
$end
#4
b0x C
b0x G
18
b0 $
b0 ?
b0 F
0D
0E
b0 B
b0 H
0A
1,
#5
0g
0+
#7
0,
#9
0)
0%
#10
bx C
bx G
x8
bx0 $
bx0 ?
bx0 F
xE
xA
b0x B
b0x H
1g
1+
#14
b0 J
b0 O
b0 a
b0 e
b0 S
b0 [
b0 C
b0 G
04
b0 &
b0 3
b0 Q
0-
01
00
0/
02
0*
0(
0'
0@
0.
#15
0g
0+
#19
b0x J
b0x O
b10 a
b10 e
bx0 C
bx0 G
x4
1(
1'
1@
1.
#20
b0 J
b0 O
b0 C
b0 G
18
b0x $
b0x ?
b0x F
04
xD
0E
bx0 B
bx0 H
1A
1g
1+
#24
b0 a
b0 e
12
0(
0'
0@
0.
#25
0g
0+
#29
1/
02
#30
b0 $
b0 ?
b0 F
0D
0A
b0 B
b0 H
1g
1+
#34
10
0/
#35
0g
0+
#39
11
00
#40
1g
1+
#44
1-
01
#45
0g
0+
#49
b1 S
b1 [
0-
1*
#50
1g
1+
#54
b0 S
b0 [
b1 &
b1 3
b1 Q
0*
#55
0g
0+
#57
1,
#60
1g
0,
1+
#65
0g
b0 &
b0 3
b0 Q
0+
#70
1A
b0 J
b0 O
b10 a
b10 e
04
1g
1(
1'
1@
1.
1+
#75
b0 a
b0 e
0g
12
0(
0'
0@
0.
0+
#80
0A
1g
1/
02
1+
#85
0g
10
0/
0+
#90
1g
11
00
1+
#95
0g
1-
01
0+
#100
b1 S
b1 [
1g
0-
1*
1+
#105
b0 S
b0 [
0g
b10 &
b10 3
b10 Q
0*
0+
#108
1,
#110
1g
1+
#111
0,
#115
0g
0+
#116
b0 &
b0 3
b0 Q
#120
1g
1+
#121
b1 J
b1 O
b10 a
b10 e
14
1(
1'
1@
1.
#125
0g
0+
#126
b0 J
b0 O
b0 a
b0 e
04
12
0(
0'
0@
0.
#130
1g
1+
#131
1/
02
#135
0g
0+
#136
10
0/
#140
1g
1+
#141
11
00
#145
0g
0+
#146
1-
01
#150
1g
1+
#151
b1 S
b1 [
0-
1*
#155
0g
0+
#156
b0 S
b0 [
b11 &
b11 3
b11 Q
0*
#160
1g
1+
#165
0g
0+
